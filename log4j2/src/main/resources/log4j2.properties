# Root logger configuration
rootLogger.level = TRACE
rootLogger.appenderRef.stdout.ref = LogToConsole
rootLogger.appenderRef.file.ref = LogToFile
rootLogger.appenderRef.rolling.ref = LogToRollingFile

# Console appender configuration
appender.console.type = Console
appender.console.name = LogToConsole
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%c] [%t] - %msg%n
# Log Level Adjusting Color
#appender.console.layout.pattern = %highlight{%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%c] [%t] - %msg%n}{FATAL=red, ERROR=red, WARN=yellow, INFO=green, DEBUG=blue}

# File appender configuration
## writes log messages to a specified file. keeps appending log to same file
appender.file.type = File
appender.file.name = LogToFile
appender.file.fileName=logs/file-appender.log
appender.file.layout.type=PatternLayout
appender.file.layout.pattern=%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%t] %c{1} - %msg%n


# Rolling File appender configuration
appender.rolling.type = RollingFile
appender.rolling.name = LogToRollingFile
appender.rolling.fileName = logs/rollingfile-appender.log
appender.rolling.filePattern = logs/$${date:yyyy-MM}/rollingfile-appender-%d{yyyy-MM-dd-HH}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%c] [%t] - %msg%n
## Adding policies for logs rotations
appender.rolling.policies.type = Policies

## Time based log rollover based on time intervals
#appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
#appender.rolling.policies.time.interval = 1
#appender.rolling.policies.time.modulate = true

## size based log rollover based on time intervals we need to give %i in filepattern for incremental counter of files
#appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
#appender.rolling.policies.size.size=0.1kB

